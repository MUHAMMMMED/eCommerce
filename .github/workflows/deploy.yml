name: CI/CD Pipeline  # Name of the workflow
on:
  push:
    branches:
      - main  # Trigger this workflow on pushes to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger this workflow on pull requests targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Check out the code
        uses: actions/checkout@v3  # Check out the repository code to the runner

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for building Docker images

      - name: Log in to Docker Hub
        uses: docker/login-action@v2  # Log in to Docker Hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username from GitHub Secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Docker Hub password/token from GitHub Secrets

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Create .env file for all 
        run: |
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env  # Add POSTGRES_DB to .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env  # Add POSTGRES_USER to .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env  # Add SECRET_KEY to .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env  # Add DEBUG to .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env  # Add POSTGRES_PASSWORD to .env
          echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}" >> .env  # Add STRIPE_API_KEY to .env
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env  # Add STRIPE_WEBHOOK_SECRET to .env

      - name: Build production Docker images
        run: |
          docker-compose -f docker-compose.prod.yml build  # Build Docker images using the production docker-compose file

      - name: Push backend Docker image (production)
        env:
          IMAGE_TAG: prod  # Set the image tag to 'prod'
        run: |
          docker tag backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/backend:$IMAGE_TAG  # Tag the backend image
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:$IMAGE_TAG  # Push the backend image to Docker Hub

      - name: Push frontend Docker image (production)
        env:
          IMAGE_TAG: prod  # Set the image tag to 'prod'
        run: |
          docker tag frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend:$IMAGE_TAG  # Tag the frontend image
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:$IMAGE_TAG  # Push the frontend image to Docker Hub