# nano /etc/nginx/sites-enabled/default
# sudo systemctl restart nginx 
 
 # Server block for HTTPS


    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name smartcardnfc.com www.smartcardnfc.com;

 

server {
 
    server_name smartcardnfc.com www.smartcardnfc.com;
    client_max_body_size 500M; # Increase maximum upload size
 

    # SSL configuration

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate         /etc/ssl/cert.pem;
    ssl_certificate_key     /etc/ssl/key.pem;
    ssl_client_certificate /etc/ssl/cloudflare.crt;
    ssl_verify_client on;

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

    }
  
     # Proxy requests for static files to the Django backend
    location /static/ {
        proxy_pass http://localhost:8000/static/; # Ensure this is the correct IP or container name
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }





}




# Server block for HTTP to HTTPS redirection
server {
    listen 80;
    server_name smartcardnfc.com;

    if ($host = smartcardnfc.com) {
        return 301 https://$host$request_uri;
    }

    return 404; # managed by Certbot
}






















# إعادة توجيه HTTP إلى HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name smartcardnfc.com www.smartcardnfc.com;
    return 301 https://$host$request_uri;
}

# إعدادات SSL و بروكسي
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name smartcardnfc.com www.smartcardnfc.com;
    client_max_body_size 500M;

    ssl_certificate /etc/ssl/cert.pem;
    ssl_certificate_key /etc/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

     # Proxy requests for static & media files to the Django backend

    location /static/ {
        proxy_pass http://localhost:8000/static/;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
 

    # Serve media files
  location /media/ {
        proxy_pass http://localhost:8000/static/;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
 
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_log /var/log/nginx/error.log;
}